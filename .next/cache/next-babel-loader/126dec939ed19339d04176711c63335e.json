{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, CardGroup, Button } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\nimport Campaign from '../ethereum/campaign';\n\nvar CampaignIndex = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignIndex, _Component);\n\n  var _super = _createSuper(CampaignIndex);\n\n  function CampaignIndex() {\n    _classCallCheck(this, CampaignIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignIndex, [{\n    key: \"renderCampaigns\",\n    value: function renderCampaigns() {\n      var descriptionMap = this.props.descriptionMap;\n      var items = this.props.campaigns.map(function (address) {\n        console.log(descriptionMap[address]);\n        return {\n          header: address,\n          meta: descriptionMap[address],\n          description: __jsx(Link, {\n            route: \"/campaign/\".concat(address)\n          }, __jsx(\"a\", null, \"View Campaign\")),\n          fluid: true\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Open Campaigns\"), __jsx(Link, {\n        route: \"/campaign/new\"\n      }, __jsx(\"a\", null, __jsx(Button, {\n        floated: \"right\",\n        content: \"Create Campaign\",\n        icon: \"add\",\n        primary: true\n      }))), this.renderCampaigns()));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var campaigns, descriptionMap;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return factory.methods.getDeployedCampaigns().call();\n\n              case 2:\n                campaigns = _context2.sent;\n                descriptionMap = new Map();\n                _context2.next = 6;\n                return Promise.allSettled(campaigns.map( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n                    var campaign, description;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            campaign = Campaign(address);\n                            _context.next = 3;\n                            return campaign.methods.campaignDescription().call();\n\n                          case 3:\n                            description = _context.sent;\n                            descriptionMap.set(address, description);\n\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()));\n\n              case 6:\n                return _context2.abrupt(\"return\", {\n                  campaigns: campaigns,\n                  descriptionMap: descriptionMap\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignIndex;\n}(Component);\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/luketchang/Desktop/Solidity_Udemy/kickstart/pages/index.js"],"names":["React","Component","factory","Card","CardGroup","Button","Layout","Link","Campaign","CampaignIndex","descriptionMap","props","items","campaigns","map","address","console","log","header","meta","description","fluid","renderCampaigns","methods","getDeployedCampaigns","call","Map","Promise","allSettled","campaign","campaignDescription","set"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,OAAOC,MAAP,MAAkB,sBAAlB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;IAEMC,a;;;;;;;;;;;;;sCAegB;AAAA,UACNC,cADM,GACa,KAAKC,KADlB,CACND,cADM;AAGd,UAAME,KAAK,GAAG,KAAKD,KAAL,CAAWE,SAAX,CAAqBC,GAArB,CAAyB,UAAAC,OAAO,EAAI;AAC9CC,QAAAA,OAAO,CAACC,GAAR,CAAYP,cAAc,CAACK,OAAD,CAA1B;AACA,eAAO;AACHG,UAAAA,MAAM,EAAEH,OADL;AAEHI,UAAAA,IAAI,EAAET,cAAc,CAACK,OAAD,CAFjB;AAGHK,UAAAA,WAAW,EACP,MAAC,IAAD;AAAM,YAAA,KAAK,sBAAeL,OAAf;AAAX,aACI,iCADJ,CAJD;AAQHM,UAAAA,KAAK,EAAE;AARJ,SAAP;AAUH,OAZa,CAAd;AAcA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAET;AAAnB,QAAP;AACH;;;6BAEQ;AACL,aACI,MAAC,MAAD,QACI,mBACI,mCADJ,EAEI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAC;AAAZ,SACI,iBACI,MAAC,MAAD;AACI,QAAA,OAAO,EAAC,OADZ;AAEI,QAAA,OAAO,EAAC,iBAFZ;AAGI,QAAA,IAAI,EAAC,KAHT;AAII,QAAA,OAAO;AAJX,QADJ,CADJ,CAFJ,EAaK,KAAKU,eAAL,EAbL,CADJ,CADJ;AAmBH;;;;;;;;;;;uBArD2BpB,OAAO,CAACqB,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,E;;;AAAlBZ,gBAAAA,S;AAEAH,gBAAAA,c,GAAiB,IAAIgB,GAAJ,E;;uBAEjBC,OAAO,CAACC,UAAR,CAAmBf,SAAS,CAACC,GAAV;AAAA,sFAAc,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7Bc,4BAAAA,QAD6B,GAClBrB,QAAQ,CAACO,OAAD,CADU;AAAA;AAAA,mCAETc,QAAQ,CAACN,OAAT,CAAiBO,mBAAjB,GAAuCL,IAAvC,EAFS;;AAAA;AAE7BL,4BAAAA,WAF6B;AAGnCV,4BAAAA,cAAc,CAACqB,GAAf,CAAmBhB,OAAnB,EAA4BK,WAA5B;;AAHmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAd;;AAAA;AAAA;AAAA;AAAA,oBAAnB,C;;;kDAMC;AAAEP,kBAAAA,SAAS,EAAEA,SAAb;AAAwBH,kBAAAA,cAAc,EAAEA;AAAxC,iB;;;;;;;;;;;;;;;;;;;EAZaT,S;;AA0D5B,eAAeQ,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, CardGroup, Button } from 'semantic-ui-react';\nimport Layout from'../components/Layout';\nimport { Link } from '../routes';\nimport Campaign from '../ethereum/campaign';\n\nclass CampaignIndex extends Component {\n    static async getInitialProps() {\n        const campaigns = await factory.methods.getDeployedCampaigns().call();\n\n        const descriptionMap = new Map();\n        \n        await Promise.allSettled(campaigns.map(async address => {\n            const campaign = Campaign(address);\n            const description = await campaign.methods.campaignDescription().call();\n            descriptionMap.set(address, description);\n        }));\n\n        return { campaigns: campaigns, descriptionMap: descriptionMap };\n    }\n    \n    renderCampaigns() {\n        const { descriptionMap } = this.props;\n\n        const items = this.props.campaigns.map(address => {\n            console.log(descriptionMap[address]);\n            return {\n                header: address,\n                meta: descriptionMap[address],\n                description: (\n                    <Link route={`/campaign/${address}`}>\n                        <a>View Campaign</a>\n                    </Link>\n                ),\n                fluid: true\n            }\n        });\n\n        return <Card.Group items={items} />;\n    }\n\n    render() {\n        return (\n            <Layout>\n                <div>\n                    <h3>Open Campaigns</h3>\n                    <Link route=\"/campaign/new\">\n                        <a>\n                            <Button \n                                floated=\"right\"\n                                content=\"Create Campaign\" \n                                icon=\"add\" \n                                primary\n                            />\n                        </a>    \n                    </Link>\n                    \n                    {this.renderCampaigns()}\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignIndex;"]},"metadata":{},"sourceType":"module"}