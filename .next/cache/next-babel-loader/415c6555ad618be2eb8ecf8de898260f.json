{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, CardGroup, Button } from 'semantic-ui-react';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\nimport Campaign from '../ethereum/campaign';\n\nclass CampaignIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      campaigns: [],\n      descriptionMap: {}\n    });\n  }\n\n  async componentDidMount() {\n    const campaigns = await factory.methods.getDeployedCampaigns().call();\n    const descriptionMap = new Map();\n    await Promise.allSettled(campaigns.map(async address => {\n      const campaign = Campaign(address);\n      const description = await campaign.methods.campaignDescription().call();\n      descriptionMap.set(address, description);\n    }));\n    this.setState({\n      campaigns: campaigns,\n      descriptionMap: descriptionMap\n    });\n  }\n\n  renderCampaigns() {\n    const items = this.state.campaigns.map(address => {\n      console.log(descriptionMap[address]);\n      return {\n        header: address,\n        description: __jsx(Link, {\n          route: `/campaign/${address}`\n        }, __jsx(\"a\", null, \"View Campaign\")),\n        fluid: true\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Open Campaigns\"), __jsx(Link, {\n      route: \"/campaign/new\"\n    }, __jsx(\"a\", null, __jsx(Button, {\n      floated: \"right\",\n      content: \"Create Campaign\",\n      icon: \"add\",\n      primary: true\n    }))), this.renderCampaigns()));\n  }\n\n}\n\nexport default CampaignIndex;","map":{"version":3,"sources":["/Users/luketchang/Desktop/Solidity_Udemy/kickstart/pages/index.js"],"names":["React","Component","factory","Card","CardGroup","Button","Layout","Link","Campaign","CampaignIndex","campaigns","descriptionMap","componentDidMount","methods","getDeployedCampaigns","call","Map","Promise","allSettled","map","address","campaign","description","campaignDescription","set","setState","renderCampaigns","items","state","console","log","header","fluid","render"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,OAAOC,MAAP,MAAkB,sBAAlB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAAA;AAAA;;AAAA,mCAC1B;AACJS,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,cAAc,EAAE;AAFZ,KAD0B;AAAA;;AAMlC,QAAMC,iBAAN,GAA0B;AACtB,UAAMF,SAAS,GAAG,MAAMR,OAAO,CAACW,OAAR,CAAgBC,oBAAhB,GAAuCC,IAAvC,EAAxB;AAEA,UAAMJ,cAAc,GAAG,IAAIK,GAAJ,EAAvB;AACA,UAAMC,OAAO,CAACC,UAAR,CAAmBR,SAAS,CAACS,GAAV,CAAc,MAAMC,OAAN,IAAiB;AACpD,YAAMC,QAAQ,GAAGb,QAAQ,CAACY,OAAD,CAAzB;AACA,YAAME,WAAW,GAAG,MAAMD,QAAQ,CAACR,OAAT,CAAiBU,mBAAjB,GAAuCR,IAAvC,EAA1B;AACAJ,MAAAA,cAAc,CAACa,GAAf,CAAmBJ,OAAnB,EAA4BE,WAA5B;AACH,KAJwB,CAAnB,CAAN;AAMA,SAAKG,QAAL,CAAc;AAAEf,MAAAA,SAAS,EAAEA,SAAb;AAAwBC,MAAAA,cAAc,EAAEA;AAAxC,KAAd;AACH;;AAEDe,EAAAA,eAAe,GAAG;AACd,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWlB,SAAX,CAAqBS,GAArB,CAAyBC,OAAO,IAAI;AAC9CS,MAAAA,OAAO,CAACC,GAAR,CAAYnB,cAAc,CAACS,OAAD,CAA1B;AACA,aAAO;AACHW,QAAAA,MAAM,EAAEX,OADL;AAEHE,QAAAA,WAAW,EACP,MAAC,IAAD;AAAM,UAAA,KAAK,EAAG,aAAYF,OAAQ;AAAlC,WACI,iCADJ,CAHD;AAOHY,QAAAA,KAAK,EAAE;AAPJ,OAAP;AASH,KAXa,CAAd;AAaA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEL;AAAnB,MAAP;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACI,mBACI,mCADJ,EAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,OACI,iBACI,MAAC,MAAD;AACI,MAAA,OAAO,EAAC,OADZ;AAEI,MAAA,OAAO,EAAC,iBAFZ;AAGI,MAAA,IAAI,EAAC,KAHT;AAII,MAAA,OAAO;AAJX,MADJ,CADJ,CAFJ,EAaK,KAAKP,eAAL,EAbL,CADJ,CADJ;AAmBH;;AAxDiC;;AA2DtC,eAAejB,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport factory from '../ethereum/factory';\nimport { Card, CardGroup, Button } from 'semantic-ui-react';\nimport Layout from'../components/Layout';\nimport { Link } from '../routes';\nimport Campaign from '../ethereum/campaign';\n\nclass CampaignIndex extends Component {\n    state = {\n        campaigns: [],\n        descriptionMap: {}\n    }\n\n    async componentDidMount() {\n        const campaigns = await factory.methods.getDeployedCampaigns().call();\n\n        const descriptionMap = new Map();\n        await Promise.allSettled(campaigns.map(async address => {\n            const campaign = Campaign(address);\n            const description = await campaign.methods.campaignDescription().call();\n            descriptionMap.set(address, description);\n        }));\n\n        this.setState({ campaigns: campaigns, descriptionMap: descriptionMap  });\n    }\n    \n    renderCampaigns() {\n        const items = this.state.campaigns.map(address => {\n            console.log(descriptionMap[address]);\n            return {\n                header: address,\n                description: (\n                    <Link route={`/campaign/${address}`}>\n                        <a>View Campaign</a>\n                    </Link>\n                ),\n                fluid: true\n            }\n        });\n\n        return <Card.Group items={items} />;\n    }\n\n    render() {\n        return (\n            <Layout>\n                <div>\n                    <h3>Open Campaigns</h3>\n                    <Link route=\"/campaign/new\">\n                        <a>\n                            <Button \n                                floated=\"right\"\n                                content=\"Create Campaign\" \n                                icon=\"add\" \n                                primary\n                            />\n                        </a>    \n                    </Link>\n                    \n                    {this.renderCampaigns()}\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default CampaignIndex;"]},"metadata":{},"sourceType":"module"}