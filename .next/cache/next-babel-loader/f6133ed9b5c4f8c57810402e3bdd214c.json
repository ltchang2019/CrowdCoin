{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nvar RequestRow = /*#__PURE__*/function (_Component) {\n  _inherits(RequestRow, _Component);\n\n  var _super = _createSuper(RequestRow);\n\n  function RequestRow() {\n    _classCallCheck(this, RequestRow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RequestRow, [{\n    key: \"approve\",\n    value: function () {\n      var _approve = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this$props, campaignAddress, index, campaign, accounts;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, campaignAddress = _this$props.campaignAddress, index = _this$props.index;\n                campaign = Campaign(this.props.campaignAddress);\n                _context.next = 4;\n                return web3.eth.getAccounts();\n\n              case 4:\n                accounts = _context.sent;\n                _context.next = 7;\n                return campaign.methods.approveRequest(index).send({\n                  from: accounts[0]\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function approve() {\n        return _approve.apply(this, arguments);\n      }\n\n      return approve;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Row = Table.Row,\n          Cell = Table.Cell;\n      var _this$props2 = this.props,\n          request = _this$props2.request,\n          id = _this$props2.id,\n          contributerCount = _this$props2.contributerCount;\n      return __jsx(Row, null, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, null, request.recipient), __jsx(Cell, null, \"\".concat(request.approvalCount, \"/\").concat(contributerCount)), __jsx(Cell, null, __jsx(Button, {\n        basic: true,\n        color: \"green\",\n        onClick: this.approve\n      }, \"Approve\")), __jsx(Cell, null));\n    }\n  }]);\n\n  return RequestRow;\n}(Component);\n\nexport default RequestRow;","map":{"version":3,"sources":["/Users/luketchang/Desktop/Solidity_Udemy/kickstart/components/RequestRow.js"],"names":["React","Component","Table","Button","Campaign","web3","RequestRow","props","campaignAddress","index","campaign","eth","getAccounts","accounts","methods","approveRequest","send","from","Row","Cell","request","id","contributerCount","description","utils","fromWei","value","recipient","approvalCount","approve"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAEMC,U;;;;;;;;;;;;;;;;;;;;;8BAGqC,KAAKC,K,EAAhCC,e,eAAAA,e,EAAiBC,K,eAAAA,K;AACnBC,gBAAAA,Q,GAAWN,QAAQ,CAAC,KAAKG,KAAL,CAAWC,eAAZ,C;;uBACFH,IAAI,CAACM,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;;uBAEAH,QAAQ,CAACI,OAAT,CAAiBC,cAAjB,CAAgCN,KAAhC,EACDO,IADC,CACI;AAAEC,kBAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD;AAAhB,iBADJ,C;;;;;;;;;;;;;;;;;;6BAID;AAAA,UACGK,GADH,GACiBhB,KADjB,CACGgB,GADH;AAAA,UACQC,IADR,GACiBjB,KADjB,CACQiB,IADR;AAAA,yBAEqC,KAAKZ,KAF1C;AAAA,UAEGa,OAFH,gBAEGA,OAFH;AAAA,UAEYC,EAFZ,gBAEYA,EAFZ;AAAA,UAEgBC,gBAFhB,gBAEgBA,gBAFhB;AAIL,aACI,MAAC,GAAD,QACI,MAAC,IAAD,QAAOD,EAAP,CADJ,EAEI,MAAC,IAAD,QAAOD,OAAO,CAACG,WAAf,CAFJ,EAGI,MAAC,IAAD,QAAOlB,IAAI,CAACmB,KAAL,CAAWC,OAAX,CAAmBL,OAAO,CAACM,KAA3B,EAAkC,OAAlC,CAAP,CAHJ,EAII,MAAC,IAAD,QAAON,OAAO,CAACO,SAAf,CAJJ,EAKI,MAAC,IAAD,kBAAUP,OAAO,CAACQ,aAAlB,cAAmCN,gBAAnC,EALJ,EAOI,MAAC,IAAD,QACI,MAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,KAAK,EAAC,OAApB;AAA4B,QAAA,OAAO,EAAE,KAAKO;AAA1C,mBADJ,CAPJ,EAWI,MAAC,IAAD,OAXJ,CADJ;AAiBH;;;;EAhCoB5B,S;;AAmCzB,eAAeK,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nclass RequestRow extends Component {\n\n    async approve() {\n        const { campaignAddress, index } = this.props;\n        const campaign = Campaign(this.props.campaignAddress);\n        const accounts = await web3.eth.getAccounts();\n\n        await campaign.methods.approveRequest(index)\n            .send({ from: accounts[0] });\n    }\n\n    render() {\n        const { Row, Cell } = Table;\n        const { request, id, contributerCount } = this.props;\n\n        return (\n            <Row>\n                <Cell>{id}</Cell>\n                <Cell>{request.description}</Cell>\n                <Cell>{web3.utils.fromWei(request.value, 'ether')}</Cell>\n                <Cell>{request.recipient}</Cell>\n                <Cell>{`${request.approvalCount}/${contributerCount}`}</Cell>\n\n                <Cell>\n                    <Button basic color=\"green\" onClick={this.approve}>Approve</Button>\n                </Cell>\n                    \n                <Cell>\n\n                </Cell>\n            </Row>\n        );\n    }\n}\n\nexport default RequestRow;"]},"metadata":{},"sourceType":"module"}