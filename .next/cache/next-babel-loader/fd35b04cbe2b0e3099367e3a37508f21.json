{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card, Grid } from 'semantic-ui-react';\nimport ContributeForm from '../../components/ContributeForm';\nimport web3 from '../../ethereum/web3';\n\nvar ShowCampaign = /*#__PURE__*/function (_Component) {\n  _inherits(ShowCampaign, _Component);\n\n  var _super = _createSuper(ShowCampaign);\n\n  function ShowCampaign() {\n    _classCallCheck(this, ShowCampaign);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ShowCampaign, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          minimumContribution = _this$props.minimumContribution,\n          balance = _this$props.balance,\n          requestCount = _this$props.requestCount,\n          contributerCount = _this$props.contributerCount,\n          manager = _this$props.manager;\n      var items = [{\n        header: manager,\n        meta: \"Address of Manager\",\n        description: \"The manager created this campaign and can create purchase requests.\",\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (Wei)\",\n        description: \"You must contribute at least this much wei to become a campaign contributer.\",\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: requestCount,\n        meta: \"Number of Requests\",\n        description: \"Managers make requests to use contribution money from their campaign. Contributers approve requests.\",\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: contributerCount,\n        meta: \"Number of Contributers\",\n        description: \"Number of people who have already donated to this campaign.\",\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: \"Campaign Balance\",\n        description: \"How much money this campaign currently has left.\",\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Show Campaign\"), __jsx(Grid, null, __jsx(Grid.Column, {\n        width: 10\n      }, this.renderCards()), __jsx(Grid.Column, {\n        width: 6\n      }, __jsx(ContributeForm, {\n        campaignAddress: this.props.campaignAddress\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  campaignAddress: props.query.address,\n                  minimumContribution: summary[0],\n                  balance: summary[1],\n                  requestCount: summary[2],\n                  contributerCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return ShowCampaign;\n}(Component);\n\nexport default ShowCampaign;","map":{"version":3,"sources":["/Users/luketchang/Desktop/Solidity_Udemy/kickstart/pages/campaign/show.js"],"names":["React","Component","Layout","Campaign","Card","Grid","ContributeForm","web3","ShowCampaign","props","minimumContribution","balance","requestCount","contributerCount","manager","items","header","meta","description","style","overflowWrap","utils","fromWei","renderCards","campaignAddress","campaign","query","address","methods","getSummary","call","summary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport { Card, Grid } from 'semantic-ui-react';\nimport ContributeForm from '../../components/ContributeForm';\nimport web3 from '../../ethereum/web3';\n\nclass ShowCampaign extends Component {\n    static async getInitialProps(props) {\n        const campaign = Campaign(props.query.address);\n        const summary = await campaign.methods.getSummary().call();\n        \n        return {\n            campaignAddress: props.query.address,\n            minimumContribution: summary[0],\n            balance: summary[1],\n            requestCount: summary[2],\n            contributerCount: summary[3],\n            manager: summary[4]\n        };\n    }\n\n    renderCards() {\n        const { \n            minimumContribution, \n            balance,\n            requestCount,\n            contributerCount,\n            manager\n        } = this.props;\n\n        const items = [\n            {\n                header: manager,\n                meta: \"Address of Manager\",\n                description: \"The manager created this campaign and can create purchase requests.\",\n                style: { overflowWrap: 'break-word' }\n            },\n            {\n                header: minimumContribution,\n                meta: \"Minimum Contribution (Wei)\",\n                description: \"You must contribute at least this much wei to become a campaign contributer.\",\n                style: { overflowWrap: 'break-word' }\n            },\n            {\n                header: requestCount,\n                meta: \"Number of Requests\",\n                description: \"Managers make requests to use contribution money from their campaign. Contributers approve requests.\",\n                style: { overflowWrap: 'break-word' }\n            },\n            {\n                header: contributerCount,\n                meta: \"Number of Contributers\",\n                description: \"Number of people who have already donated to this campaign.\",\n                style: { overflowWrap: 'break-word' }\n            },\n            {\n                header: web3.utils.fromWei(balance, 'ether'),\n                meta: \"Campaign Balance\",\n                description: \"How much money this campaign currently has left.\",\n                style: { overflowWrap: 'break-word' }\n            }\n\n        ];\n\n        return <Card.Group items={items} />;\n    }\n\n    render() {\n        return (\n            <Layout>\n                <h3>Show Campaign</h3>\n                <Grid>\n                    <Grid.Column width={10}>\n                        {this.renderCards()}\n                    </Grid.Column>\n\n                    <Grid.Column width={6}>\n                        <ContributeForm campaignAddress={this.props.campaignAddress}/>\n                    </Grid.Column>\n                </Grid>\n            </Layout>\n        );\n    }\n}\n\nexport default ShowCampaign;"]},"metadata":{},"sourceType":"module"}