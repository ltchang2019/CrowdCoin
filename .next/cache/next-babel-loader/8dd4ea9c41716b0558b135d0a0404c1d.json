{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\nimport { Router } from '../routes';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"submitContribution\", async event => {\n      event.preventDefault();\n      this.setState({\n        errorMessage: '',\n        loading: false\n      });\n      const accounts = await web3.eth.getAccounts();\n      const campaign = await Campaign(this.props.campaignAddress);\n\n      try {\n        this.setState({\n          loading: true\n        });\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, 'ether')\n        });\n        Router.replaceRoute(`/campaign/${this.props.campaignAddress}`);\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.submitContribution,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Contribute\"), __jsx(Input, {\n      label: \"ether\",\n      placeholder: \"Amount you would like to contribute\",\n      labelPosition: \"right\",\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      })\n    })), __jsx(Button, {\n      primary: true,\n      loading: this.state.loading\n    }, \"Contribute!\"), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/Users/luketchang/Desktop/Solidity_Udemy/kickstart/components/ContributeForm.js"],"names":["React","Component","Button","Form","Input","Message","web3","Campaign","Router","ContributeForm","value","errorMessage","loading","event","preventDefault","setState","accounts","eth","getAccounts","campaign","props","campaignAddress","methods","contribute","send","from","utils","toWei","state","replaceRoute","error","message","render","submitContribution","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,OAA9B,QAA4C,mBAA5C;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC3B;AACJS,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAD2B;;AAAA,gDAOd,MAAOC,KAAP,IAAiB;AAClCA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,YAAY,EAAE,EAAhB;AAAoBC,QAAAA,OAAO,EAAE;AAA7B,OAAd;AAEA,YAAMI,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAAC,KAAKa,KAAL,CAAWC,eAAZ,CAA/B;;AAEA,UAAI;AACA,aAAKN,QAAL,CAAc;AAAEH,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA,cAAMO,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GACDC,IADC,CACI;AACFC,UAAAA,IAAI,EAAET,QAAQ,CAAC,CAAD,CADZ;AAEFN,UAAAA,KAAK,EAAEJ,IAAI,CAACoB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWlB,KAA5B,EAAmC,OAAnC;AAFL,SADJ,CAAN;AAMAF,QAAAA,MAAM,CAACqB,YAAP,CAAqB,aAAY,KAAKT,KAAL,CAAWC,eAAgB,EAA5D;AACH,OATD,CASE,OAAMS,KAAN,EAAa;AACX,aAAKf,QAAL,CAAc;AAAEJ,UAAAA,YAAY,EAAEmB,KAAK,CAACC;AAAtB,SAAd;AACH;;AAED,WAAKhB,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KA5BkC;AAAA;;AA8BnCoB,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,kBAArB;AAAyC,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKL,KAAL,CAAWjB;AAA7D,OACI,MAAC,IAAD,CAAM,KAAN,QACI,4CADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAC,OADV;AAEI,MAAA,WAAW,EAAC,qCAFhB;AAGI,MAAA,aAAa,EAAC,OAHlB;AAII,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWlB,KAJtB;AAKI,MAAA,QAAQ,EAAEG,KAAK,IAAI,KAAKE,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEG,KAAK,CAACqB,MAAN,CAAaxB;AAAtB,OAAd;AALvB,MAFJ,CADJ,EAWI,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWhB;AAApC,qBAXJ,EAYI,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,OAAtB;AAA8B,MAAA,OAAO,EAAE,KAAKgB,KAAL,CAAWjB;AAAlD,MAZJ,CADJ;AAgBH;;AA/CkC;;AAkDvC,eAAeF,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, Input, Message} from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\nimport { Router } from '../routes';\n\nclass ContributeForm extends Component {\n    state = {\n        value: '',\n        errorMessage: '',\n        loading: false\n    };\n\n    submitContribution = async (event) => {\n        event.preventDefault();\n        this.setState({ errorMessage: '', loading: false });\n\n        const accounts = await web3.eth.getAccounts();\n        const campaign = await Campaign(this.props.campaignAddress);\n\n        try {\n            this.setState({ loading: true });\n            await campaign.methods.contribute()\n                .send({ \n                    from: accounts[0],\n                    value: web3.utils.toWei(this.state.value, 'ether')\n                });\n\n            Router.replaceRoute(`/campaign/${this.props.campaignAddress}`);\n        } catch(error) {\n            this.setState({ errorMessage: error.message });\n        }\n\n        this.setState({ loading: false });\n    };\n\n    render() {\n        return (\n            <Form onSubmit={this.submitContribution} error={!!this.state.errorMessage}>\n                <Form.Field>\n                    <label>Amount to Contribute</label>\n                    <Input \n                        label=\"ether\"\n                        placeholder=\"Amount you would like to contribute\"\n                        labelPosition=\"right\"\n                        value={this.state.value}\n                        onChange={event => this.setState({ value: event.target.value })}\n                    />\n                </Form.Field>\n                <Button primary loading={this.state.loading}>Contribute!</Button>\n                <Message error header=\"Oops!\" content={this.state.errorMessage} />\n            </Form>\n        );\n    }\n}\n\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}